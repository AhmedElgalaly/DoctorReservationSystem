/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.DoctorReservationSystem.Screens;

import org.DoctorReservationSystem.controller.ReservationController;
import org.DoctorReservationSystem.dao.ClinicDaoImp;
import org.DoctorReservationSystem.dao.ReservationDao;
import org.DoctorReservationSystem.dao.ReservationDaoImp;
import org.DoctorReservationSystem.domain.Clinic;
import org.DoctorReservationSystem.domain.Doctor;
import org.DoctorReservationSystem.domain.Patient;
import org.DoctorReservationSystem.domain.Reservation;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Objects;

/**
 *
 * @author Ahmed
 */
public class BookAppointmentScreen extends javax.swing.JFrame {

    /**
     * Creates new form HomePageScreen
     */
    public BookAppointmentScreen(Patient patient) {
        this.patient = patient;
        initComponents();
        ClinicDaoImp clinicDaoImp = new ClinicDaoImp();

        ArrayList<Clinic> clinics = clinicDaoImp.fetchClinics();

        for(Clinic i: clinics)
            ClinicComboBox.addItem(i);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NavPanel = new javax.swing.JPanel();
        bookAppointmentBtn = new javax.swing.JButton();
        myProfileBtn = new javax.swing.JButton();
        appointmentsBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        bookBtn = new javax.swing.JButton();
        ClinicComboBox = new javax.swing.JComboBox<>();
        clinicLabel = new javax.swing.JLabel();
        doctorLabel = new javax.swing.JLabel();
        doctorComboBox = new javax.swing.JComboBox<>();
        datePanel = new javax.swing.JPanel();
        dayLabel = new javax.swing.JLabel();
        dayComboBox = new javax.swing.JComboBox<>();
        monthLabel = new javax.swing.JLabel();
        monthCombox = new javax.swing.JComboBox<>();
        yearLabel = new javax.swing.JLabel();
        yearCombox = new javax.swing.JComboBox<>();
        hourLabel = new javax.swing.JLabel();
        hourCombox = new javax.swing.JComboBox<>();
        dateLabel = new javax.swing.JLabel();
        DateFeedbackLabel = new javax.swing.JLabel();
        ReasonLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReasonTestArea = new javax.swing.JTextArea();
        MainLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book an Appointment");
        setResizable(false);

        NavPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bookAppointmentBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookAppointmentBtn.setText("Book an Appointment");
        bookAppointmentBtn.setFocusable(false);
        bookAppointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAppointmentBtnActionPerformed(evt);
            }
        });

        myProfileBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        myProfileBtn.setText("My Profile");
        myProfileBtn.setFocusable(false);
        myProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myProfileBtnActionPerformed(evt);
            }
        });

        appointmentsBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        appointmentsBtn.setText("Appointments");
        appointmentsBtn.setFocusable(false);
        appointmentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentsBtnActionPerformed(evt);
            }
        });

        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutBtn.setText("Logout");
        logoutBtn.setFocusable(false);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavPanelLayout = new javax.swing.GroupLayout(NavPanel);
        NavPanel.setLayout(NavPanelLayout);
        NavPanelLayout.setHorizontalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookAppointmentBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
            .addComponent(myProfileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(appointmentsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        NavPanelLayout.setVerticalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(bookAppointmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(appointmentsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(myProfileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutBtn)
                .addContainerGap())
        );

        bookBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookBtn.setText("Book");
        bookBtn.setFocusable(false);
        bookBtn.addActionListener(e->bookBtnActionPerformed());

        clinicLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clinicLabel.setText("Clinic:");
        // TODO: add Listener to change doctor options
        ClinicComboBox.addActionListener(e->{
            ClinicDaoImp clinicDaoImp = new ClinicDaoImp();

            ArrayList<Doctor> doctors = clinicDaoImp.fetchClinicDoctors((Clinic) ClinicComboBox.getSelectedItem());

            hourCombox.removeAllItems();
            yearCombox.removeAllItems();
            monthCombox.removeAllItems();
            dayComboBox.removeAllItems();
            doctorComboBox.removeAllItems();
            for (Doctor i: doctors)
                doctorComboBox.addItem(i);
        });

        doctorLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        doctorLabel.setText("Doctor:");

        doctorComboBox.addActionListener(e->{

            hourCombox.removeAllItems();
            yearCombox.removeAllItems();
            monthCombox.removeAllItems();
            dayComboBox.removeAllItems();
            for(int i=1; i<=30; i++)
                dayComboBox.addItem(String.valueOf(i).length() == 1 ? "0"+ i :String.valueOf(i));
        });


        datePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        dayLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dayLabel.setText("Day:");
        dayComboBox.addActionListener(e->{

            hourCombox.removeAllItems();
            yearCombox.removeAllItems();
            monthCombox.removeAllItems();
            for(int i=1; i<=12; i++)
                monthCombox.addItem(String.valueOf(i));
        });

        monthLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        monthLabel.setText("Month:");
        monthCombox.addActionListener(e->{
            hourCombox.removeAllItems();
            yearCombox.removeAllItems();
            for(int i = LocalDate.now().getYear(); i<= LocalDate.now().getYear()+3;i++)
                yearCombox.addItem(String.valueOf(i));
        });

        yearLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yearLabel.setText("Year:");
        yearCombox.addActionListener(e->{
            hourCombox.removeAllItems();
            for(int i=12; i<=21; i++){
                hourCombox.addItem(String.valueOf(i));
            }
        });

        hourLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hourLabel.setText("Hour:");

        hourCombox.addActionListener(e-> {

            try {
                if (Objects.requireNonNull(yearCombox.getSelectedItem()).toString().isEmpty() || Objects.requireNonNull(monthCombox.getSelectedItem()).toString().isEmpty()
                        || Objects.requireNonNull(dayComboBox.getSelectedItem()).toString().isEmpty() || Objects.requireNonNull(hourCombox.getSelectedItem()).toString().isEmpty())
                    return;
            }catch (NullPointerException npe){
                return;
            }

            final String time = yearCombox.getSelectedItem()
                    + "-" + monthCombox.getSelectedItem() + "-" + dayComboBox.getSelectedItem()
                    + " " + hourCombox.getSelectedItem() + ":00:00";
            System.out.println(time);
            if(ReservationController.isAvailable(Timestamp.valueOf(time), (Doctor) doctorComboBox.getSelectedItem())){
                DateFeedbackLabel.setText("Valid");
                DateFeedbackLabel.setForeground(Color.GREEN);
            }else {
                DateFeedbackLabel.setText("Invalid");
                DateFeedbackLabel.setForeground(Color.RED);
            }
        });


        javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
        datePanel.setLayout(datePanelLayout);
        datePanelLayout.setHorizontalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(monthCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(yearLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearCombox, 0, 97, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hourLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hourCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        datePanelLayout.setVerticalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hourLabel)
                        .addComponent(hourCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yearLabel)
                        .addComponent(yearCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(monthLabel)
                        .addComponent(monthCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dayLabel)
                        .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        dateLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dateLabel.setText("Date:");

        DateFeedbackLabel.setText("");

        ReasonLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ReasonLabel.setText("Reason:");

        ReasonTestArea.setColumns(20);
        ReasonTestArea.setRows(5);
        jScrollPane1.setViewportView(ReasonTestArea);

        MainLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        MainLabel.setText("Book an Appointment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(NavPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(clinicLabel)
                                            .addComponent(doctorLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ClinicComboBox, 0, 171, Short.MAX_VALUE)
                                            .addComponent(doctorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(DateFeedbackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ReasonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(85, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(216, 216, 216))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(MainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClinicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clinicLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(DateFeedbackLabel))
                .addGap(1, 1, 1)
                .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ReasonLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
            .addComponent(NavPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookAppointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAppointmentBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_bookAppointmentBtnActionPerformed

    private void myProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myProfileBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MyProfileScreen(patient).setVisible(true);
    }//GEN-LAST:event_myProfileBtnActionPerformed

    private void appointmentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentsBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new AppointmentsScreeen(patient).setVisible(true);
    }//GEN-LAST:event_appointmentsBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        patient = null;
        this.dispose();
        new WelcomePage().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bookBtnActionPerformed(){
        if(ReasonTestArea.getText().isBlank()){
            JOptionPane.showMessageDialog(this,"Fill The Reason TextBox", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        final String time = yearCombox.getSelectedItem()
                + "-" + monthCombox.getSelectedItem() + "-" + dayComboBox.getSelectedItem()
                + " " + hourCombox.getSelectedItem() + ":00:00";
        System.out.println(time);
        System.out.println(patient);
        System.out.println((Doctor) doctorComboBox.getSelectedItem());
        System.out.println((Clinic) ClinicComboBox.getSelectedItem());
        if(ReservationController.isAvailable(Timestamp.valueOf(time), (Doctor) doctorComboBox.getSelectedItem())){
            Reservation reservation = new Reservation(0, patient, (Doctor) doctorComboBox.getSelectedItem(),
                    (Clinic) ClinicComboBox.getSelectedItem(),Timestamp.valueOf(time),ReasonTestArea.getText());
            new ReservationDaoImp().add(reservation);
            JOptionPane.showMessageDialog(this,"Appointment Booked", "Success", JOptionPane.INFORMATION_MESSAGE);
        }else {
            JOptionPane.showMessageDialog(this,"Invalid Input", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookAppointmentScreen(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Patient patient;
    private javax.swing.JComboBox<Clinic> ClinicComboBox;
    private javax.swing.JLabel DateFeedbackLabel;
    private javax.swing.JLabel MainLabel;
    private javax.swing.JPanel NavPanel;
    private javax.swing.JLabel ReasonLabel;
    private javax.swing.JTextArea ReasonTestArea;
    private javax.swing.JButton appointmentsBtn;
    private javax.swing.JButton bookAppointmentBtn;
    private javax.swing.JButton bookBtn;
    private javax.swing.JLabel clinicLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JComboBox<String> dayComboBox;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JComboBox<Doctor> doctorComboBox;
    private javax.swing.JLabel doctorLabel;
    private javax.swing.JComboBox<String> hourCombox;
    private javax.swing.JLabel hourLabel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> monthCombox;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JButton myProfileBtn;
    private javax.swing.JComboBox<String> yearCombox;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
